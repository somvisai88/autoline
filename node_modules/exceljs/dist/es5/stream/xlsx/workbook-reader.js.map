{"version":3,"sources":["../../../../lib/stream/xlsx/workbook-reader.js"],"names":["fs","require","EventEmitter","Stream","unzip","tmp","SAXStream","FlowControl","StyleManager","WorkbookPropertiesManager","WorksheetReader","HyperlinkReader","setGracefulCleanup","WorkbookReader","options","styles","init","properties","worksheetReaders","hyperlinkReaders","readers","atEnd","waitingWorkSheets","tempFileCleanupCallbacks","input","Readable","createReadStream","Error","stream","_getStream","zip","Parse","pendingWorksheetsTmpFiles","on","entry","match","sheetNo","path","autodrain","_parseWorkbook","_parseSharedStrings","_parseStyles","sharedStrings","_parseWorksheet","push","Promise","resolve","reject","file","err","fd","cleanupCallback","tempStream","createWriteStream","pipe","_parseHyperlinks","all","emit","length","currentBook","processBooks","worksheetInfo","worksheet","forEach","cb","setImmediate","payload","entries","_emitEntry","type","parseStream","saxStream","inT","t","index","sax","node","name","text","error","Type","collection","reader","id","worksheetReader","_getReader","worksheets","read","hyperlinksReader","hyperlinks","_flowControl","Options","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst {EventEmitter} = require('events');\r\nconst Stream = require('stream');\r\nconst unzip = require('unzipper');\r\nconst tmp = require('tmp');\r\nconst SAXStream = require('../../utils/sax-stream');\r\n\r\nconst FlowControl = require('../../utils/flow-control');\r\n\r\nconst StyleManager = require('../../xlsx/xform/style/styles-xform');\r\nconst WorkbookPropertiesManager = require('../../xlsx/xform/book/workbook-properties-xform');\r\n\r\nconst WorksheetReader = require('./worksheet-reader');\r\nconst HyperlinkReader = require('./hyperlink-reader');\r\n\r\ntmp.setGracefulCleanup();\r\n\r\nclass WorkbookReader extends EventEmitter {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = options = options || {};\r\n\r\n    this.styles = new StyleManager();\r\n    this.styles.init();\r\n\r\n    this.properties = new WorkbookPropertiesManager();\r\n\r\n    // worksheet readers, indexed by sheetNo\r\n    this.worksheetReaders = {};\r\n\r\n    // hyperlink readers, indexed by sheetNo\r\n    this.hyperlinkReaders = {};\r\n\r\n    // count the open readers\r\n    this.readers = 0;\r\n\r\n    // end of stream check\r\n    this.atEnd = false;\r\n\r\n    // worksheets, deferred for parsing after shared strings reading\r\n    this.waitingWorkSheets = [];\r\n\r\n    // callbacks for temp files cleanup\r\n    this.tempFileCleanupCallbacks = [];\r\n  }\r\n\r\n  _getStream(input) {\r\n    if (input instanceof Stream.Readable) {\r\n      return input;\r\n    }\r\n    if (typeof input === 'string') {\r\n      return fs.createReadStream(input);\r\n    }\r\n    throw new Error('Could not recognise input');\r\n  }\r\n\r\n  get flowControl() {\r\n    if (!this._flowControl) {\r\n      this._flowControl = new FlowControl(this.options);\r\n    }\r\n    return this._flowControl;\r\n  }\r\n\r\n  read(input, options) {\r\n    const stream = (this.stream = this._getStream(input));\r\n    const zip = (this.zip = unzip.Parse());\r\n    const pendingWorksheetsTmpFiles = [];\r\n\r\n    zip.on('entry', entry => {\r\n      let match;\r\n      let sheetNo;\r\n      switch (entry.path) {\r\n        case '_rels/.rels':\r\n        case 'xl/_rels/workbook.xml.rels':\r\n          entry.autodrain();\r\n          break;\r\n        case 'xl/workbook.xml':\r\n          this._parseWorkbook(entry, options);\r\n          break;\r\n        case 'xl/sharedStrings.xml':\r\n          this._parseSharedStrings(entry, options);\r\n          break;\r\n        case 'xl/styles.xml':\r\n          this._parseStyles(entry, options);\r\n          break;\r\n        default:\r\n          if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\r\n            match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n            sheetNo = match[1];\r\n            if (this.sharedStrings) {\r\n              this._parseWorksheet(entry, sheetNo, options);\r\n            } else {\r\n              // create temp file for each worksheet\r\n              pendingWorksheetsTmpFiles.push(\r\n                new Promise((resolve, reject) => {\r\n                  tmp.file((err, path, fd, cleanupCallback) => {\r\n                    if (err) {\r\n                      return reject(err);\r\n                    }\r\n\r\n                    const tempStream = fs.createWriteStream(path);\r\n\r\n                    this.waitingWorkSheets.push({sheetNo, options, path});\r\n                    entry.pipe(tempStream);\r\n\r\n                    this.tempFileCleanupCallbacks.push(cleanupCallback);\r\n\r\n                    return tempStream.on('finish', () => {\r\n                      return resolve();\r\n                    });\r\n                  });\r\n                })\r\n              );\r\n            }\r\n          } else if (entry.path.match(/xl\\/worksheets\\/_rels\\/sheet\\d+[.]xml.rels/)) {\r\n            match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n            sheetNo = match[1];\r\n            this._parseHyperlinks(entry, sheetNo, options);\r\n          } else {\r\n            entry.autodrain();\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    zip.on('close', async () => {\r\n      try {\r\n        await Promise.all(pendingWorksheetsTmpFiles);\r\n      } catch (err) {\r\n        this.emit('error', err);\r\n        return;\r\n      }\r\n\r\n      if (this.waitingWorkSheets.length) {\r\n        let currentBook = 0;\r\n\r\n        const processBooks = () => {\r\n          const worksheetInfo = this.waitingWorkSheets[currentBook];\r\n          const entry = fs.createReadStream(worksheetInfo.path);\r\n\r\n          const {sheetNo} = worksheetInfo;\r\n          const worksheet = this._parseWorksheet(entry, sheetNo, worksheetInfo.options);\r\n\r\n          worksheet.on('finished', () => {\r\n            ++currentBook;\r\n            if (currentBook === this.waitingWorkSheets.length) {\r\n              // temp files cleaning up\r\n              this.tempFileCleanupCallbacks.forEach(cb => {\r\n                cb();\r\n              });\r\n\r\n              this.tempFileCleanupCallbacks = [];\r\n\r\n              this.emit('end');\r\n              this.atEnd = true;\r\n              if (!this.readers) {\r\n                this.emit('finished');\r\n              }\r\n            } else {\r\n              setImmediate(processBooks);\r\n            }\r\n          });\r\n        };\r\n        setImmediate(processBooks);\r\n      } else {\r\n        this.emit('end');\r\n        this.atEnd = true;\r\n        if (!this.readers) {\r\n          this.emit('finished');\r\n        }\r\n      }\r\n    });\r\n\r\n    zip.on('error', err => {\r\n      this.emit('error', err);\r\n    });\r\n\r\n    // Pipe stream into top flow-control\r\n    // this.flowControl.pipe(zip);\r\n    stream.pipe(zip);\r\n  }\r\n\r\n  _emitEntry(options, payload) {\r\n    if (options.entries === 'emit') {\r\n      this.emit('entry', payload);\r\n    }\r\n  }\r\n\r\n  _parseWorkbook(entry, options) {\r\n    this._emitEntry(options, {type: 'workbook'});\r\n    this.properties.parseStream(entry);\r\n  }\r\n\r\n  _parseSharedStrings(entry, options) {\r\n    this._emitEntry(options, {type: 'shared-strings'});\r\n    let sharedStrings = null;\r\n    switch (options.sharedStrings) {\r\n      case 'cache':\r\n        sharedStrings = this.sharedStrings = [];\r\n        break;\r\n      case 'emit':\r\n        break;\r\n      default:\r\n        entry.autodrain();\r\n        return;\r\n    }\r\n\r\n    const saxStream = new SAXStream();\r\n    let inT = false;\r\n    let t = null;\r\n    let index = 0;\r\n    saxStream.sax.on('opentag', node => {\r\n      if (node.name === 't') {\r\n        t = null;\r\n        inT = true;\r\n      }\r\n    });\r\n    saxStream.sax.on('closetag', node => {\r\n      if (inT && node.name === 't') {\r\n        if (sharedStrings) {\r\n          sharedStrings.push(t);\r\n        } else {\r\n          this.emit('shared-string', {index: index++, text: t});\r\n        }\r\n        t = null;\r\n      }\r\n    });\r\n    saxStream.sax.on('text', text => {\r\n      t = t ? t + text : text;\r\n    });\r\n    saxStream.sax.on('error', error => {\r\n      this.emit('error', error);\r\n    });\r\n    entry.pipe(saxStream);\r\n  }\r\n\r\n  _parseStyles(entry, options) {\r\n    this._emitEntry(options, {type: 'styles'});\r\n    if (options.styles !== 'cache') {\r\n      entry.autodrain();\r\n      return;\r\n    }\r\n    this.styles = new StyleManager();\r\n    this.styles.parseStream(entry);\r\n  }\r\n\r\n  _getReader(Type, collection, sheetNo) {\r\n    let reader = collection[sheetNo];\r\n    if (!reader) {\r\n      reader = new Type(this, sheetNo);\r\n      this.readers++;\r\n      reader.on('finished', () => {\r\n        if (!--this.readers) {\r\n          if (this.atEnd) {\r\n            this.emit('finished');\r\n          }\r\n        }\r\n      });\r\n      collection[sheetNo] = reader;\r\n    }\r\n    return reader;\r\n  }\r\n\r\n  _parseWorksheet(entry, sheetNo, options) {\r\n    this._emitEntry(options, {type: 'worksheet', id: sheetNo});\r\n    const worksheetReader = this._getReader(WorksheetReader, this.worksheetReaders, sheetNo);\r\n    if (options.worksheets === 'emit') {\r\n      this.emit('worksheet', worksheetReader);\r\n    }\r\n    worksheetReader.read(entry, options, this.hyperlinkReaders[sheetNo]);\r\n    return worksheetReader;\r\n  }\r\n\r\n  _parseHyperlinks(entry, sheetNo, options) {\r\n    this._emitEntry(options, {type: 'hyerlinks', id: sheetNo});\r\n    const hyperlinksReader = this._getReader(HyperlinkReader, this.hyperlinkReaders, sheetNo);\r\n    if (options.hyperlinks === 'emit') {\r\n      this.emit('hyperlinks', hyperlinksReader);\r\n    }\r\n    hyperlinksReader.read(entry, options);\r\n  }\r\n}\r\n\r\n// for reference - these are the valid values for options\r\nWorkbookReader.Options = {\r\n  entries: ['emit'],\r\n  sharedStrings: ['cache', 'emit'],\r\n  styles: ['cache'],\r\n  hyperlinks: ['cache', 'emit'],\r\n  worksheets: ['emit'],\r\n};\r\n\r\nmodule.exports = WorkbookReader;\r\n"],"file":"workbook-reader.js"}